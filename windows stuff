registry:
  a database of information for everything window
  
  hklm has volatile date pertaining to hardware files

hives:
  classes root:
  current user:
    gives a link to the hkey users of the current user logged in
  local machine:
  users:
    contains all user profiles
  current configuration:
    
edit registry in command line:
  more
  reg add
  reg delete
  reg copy
  
  ------------------------
  
  DEFAULT RUN KEYS----- check here for malicious persistance
 HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\run
 HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\runonce
 HKCU\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN
 HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\runonce
 
 HKU\<SID>\SOFTWARE\Microsoft\Windows\Currentversion\run
 HKLM\SOFTWARE
 
 BASIC WINDOWS COMMANDS
 
 ALTERNATE DATA STREAMS:
 COMMAND LINES ---------------------------------
echo I love coffee > coffee.txt
dir coffee.txt >> gives info about txt file
type coffee.txt >> I love coffee
echo secret text shhh > coffee.txt:secret.info
dir coffee.txt >> changes time, but nothing else from OG files
type coffee.txt >> I love coffee
more < coffee.txt:secret.info >> secret text shh
dir /R coffee.txt >> shows the ADS
echo secret text > OrdinaryFile.txt:SecretFile

POWERSHELL----------------------------
echo "ordinary text lol" > coffee.txt
set-content coffee.txt -value "secret text actually" -stream topsecret.info
gi .\coffee.txt -stream *
gi .\coffee.txt -stream topsecret.info
get-filehash .\coffee.txt | ft -wr <<< hash of text file doesn't change

-------------------HOST ENUMERATION----------------------
where am i?
>>hostname -f
who am i?
>>id
>>whoami
>>what can i do?
>>sudo -l
what's going on?
>>netstat
>>ps -elf
>>ss
>>top
what's that?
what's it doing?
why/how is it going that?
what's in there?
cat files, view parent processes, view child processes
view parents files
 
 
 
 bcdedit /set (/deletevalue) safeboot
 bcdedit /set (/deletevalue) safebootalternateshell yes
 msconfig << use the gui and figure it out
 
 ------------------------------------------------------
 REAL SHIT
 Process Validity:
 making sure a thing is what it says it is
 look at what's actually being run
 get the version of tools being run to find exploits
 #(real quick tho: what's a process? it's an executable that requires some kind of user interaction)
  
  but also, what's a cmd
  ? dynamic link library
  >helps a program run
  
 services launch automatically or when certain things are met, similar to a scheduled task
 without admin rights, services can't be killed
 
 processes can be killed, however, regardless of privilege level
 
 can hide stuff from APIs, but can't hide from the kernel
 >>get-ciminstance will be the best way to find something that's trying to hide
  >>get-wmiobject win32_process | where { $_.name  -like "powershell_ise.exe" } | select *
         this will get you more information than get-object, including the PID and Parent PID
         check full file path and the command line function to see what any given process is actually doing lol

heres a cool one: get-wmiobject win32_process | where { $_.name  -like "maleware.exe" } | select name, processid, parentprocessid, path, commandline
                                                        { $_.processid -eq "123" }
                    get-wmiobject win32_process | ft name, processid, parentprocessid, path, commandline
 if the binary of an exe doesn't run itself, something is sus


GET THE DLLS of stuff:
get-process powershell_ise | select -ExpandProperty modules
(if the Dll is uppercase, it generally means it's run by system)

get services and tasks and shit:
tasklist (tasks)
tasklist /svc (services)
tasklist /m (modules)
or just use task manager wtf
or regedit << Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image
 
 find services-----------------
 
 start taskmgr
 services
 sc.exe >> sc.exe query >> sc.exe queryex type=service >> sc.exe queryex type=service state=inactive(or all)
    get-ciminstance win32_service | where { $_.displayName -like "*firewall*" } | select name 
sc.exe showsid "service"
get-scheduledtask <<<<< we ONLY care about the running status
  getscheduledtask -taskname "name" | select *
schtasks /query /tn "name" /v /fo list
or use task scheduler
get-ciminstance win32_service | where { $_.Name -like "calc" } | select name processid,parentprocessid
 ps: find-service"service" "service"
get-ciminstance
 gwmi win32_service | where { $_.name -like "Schedule" } | 

network connections-----------------
strings -accepteula << '-accepteula' auto accepts all pop ups and warnings from a command

netstat -anob
autoruns64 == is a tool that discovers software that automatically boots or starts
procexp64 == can services and their children 
tcpview == views ports and local address of services
handle == view the handles of a process

User account control=================

registry key is located at HKLM:\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System
>> gi HKLM:\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System
 if enableLUA is set to 1: it's enabled; elif set to 0: return disabled;
 UAC Execution level in a file manifest----
 asInvoker: runs w the same perms as the process that started it
 requireAdministrator: will run w admin perms
 highestAvailable: highest perms it can
 
-----------------
  will the UAC prompt show? maybe idk
  ---------------------------------------------------------------------------------------------------------------------------
  LINUX PROCESS VALIDITY:
  kthreadd spawned processes have PPID of 2
  2 primary processes after startup:
    kernel-space processes: kthreadd
    user-space processes: /sbin/init (PID=1)
  view running processes in real time command: htop <-- press f5 to see trees between proccesses
  --Get a snap shot of processes--
  ps -ppid 2 -lf
  ps -elf | grep sshd
  ** if you see a process that's in capitals, it's a child process of a lowercase version **
      ie: /usr/sbin/cron
            >/usr/sbin/CRON
  ps -elf --forest | grep (process) --context=5c
  
  ld -l /usr/bib/passwd
  --------------------------
  fork() takes a process and replicates it, creating a child process
  exec() end it
  
  use the command "jobs" to see running task
  kill -9 [pid]
  >> "all daemons are orphans, not all orphans are daemons" -Sgt Woods, 2022
  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  cat /etc/crontab >>>> shows system-wide crontab and shows crontab format
      or /etc/cron.d
      /var/spool/cron/crontabs
  man crontab 
  crontab -e -u "username"
  
  ps -elf --forest | grep CRON -B 5 
      > if you see CRON, it means at least one process is running
      
 ------------------------------------
 man service
 service <service name> stop/start/restart/status
 man systemctl
 systemctl status ,service
 systemctl list-units --all
 systemctl stop <servicename.service>
 sudo lsof | tail -10
 sudo lsof -c sshd
 sudo lsof -i << find network connections and get process ID
    ps -elf --forest | grep <process ID>
 
 ONLY worried about W, R, and U (write, read, user(both write and read))
 file descriptors 0,1,2 >> standard inpit, standard output, standard error
 
 GET THE NUMBER OF FILES A PROCESS SPAWNS:
 ps --ppid  {INSERT PID OF PROCESS} --no-headers | wc --lines

 FIND SYMBOLIC LINKS TO SSHD PROCESS:
 sudo find . -type l -ls | grep sshd | sort
-------------------------------------------
windows artifacts:
something left behind from code execution
hunting artifacts is intelligence gathering, basically our job
GET USER SID:
get-localuser | select name, sid <<< only on local accounts
get-wmiobject win32_useraccount | select name,sid
wmic useraccount get name,sid 
--------------------------------------------------
userassist
tracks the GUI based programs ran by a particular user
get-item property
'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssit\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count'
THROUGH THIS INTO Cyberchef and use ROT13
---------------------------------------
get-itemproperty
'HKLM:\SYSTEM\CurrentControlSet\Services\bam\UserSettings\* 
<<< Device\HaddiskVolume1 is the same as C: drive
---------------------------------------------------
RECYCLE BIN
The recycle bin is a very important location on a windows file system to understand. It can help you accomplish a forensic invesitgation.
gci 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select *
gci 'C:\$RECYCLE.BIN' -Recurse -Force
two files are created when something is deleted 
$R is the contents for the deleted file, $I is corresponding to it. each $R and $I has a random number after them that match each other for each deleted file
gci -force -recurse 'C:\$Recycle.Bin' | where { $_.name -like "`$R*" }| ForEach-Object { Write-Host "$_.name --> " -Foregroundcolor green -nonewline ; write-host (get-content $_.fullname) }
THIS GETS THE DELETED FILE CONTENTS ^^^^^^^^^^
DO THE SAME COMMMAND BUT REPLACE THE R WITH AN I IN ORDER TO GET THE FILE PATH AND OG FILENAME
---------------------------------------------------
PREFETCH
keeps a copy of binary and saves it in a file
gci -path 'C:\Windows\Prefetch' -ErrorAction Continue | select * | select -first 5
the prefetch doesn't exist unless the thing has been run
**evidence of an executable being ran**
gci c:\windows\prefetch
---------------------------------------------
gci -Recurse c:\Users\*\Appdata\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | select FullName, LastAcessTime 
view the access time for any that stand out <<<<

-----------------------------------------------
browser artifacts
stores details for each user asccount
history, cookies, favorites, bookmarks, etc
.\strings.exe 'C:\Users\<username>\AppData\Local\Google\Chrome\UserData\Default\History'
-------------------
AUDITING (AGAIN)
what gets logged
cd $HOME
AUDITPOL /get /category:*
LSASS sends the event log messages on to the Event Logger
two kinds of logs, system and cutom
get-eventlog * << if Application, Security, or System logs have little to no entries in them, someone must have cleared them
get-eventlog -logname Securtity | select -first 5 | ft -autosize -wrap
get-eventlog -logname Securtity -message "*logon*" | select -first 5 | ft -autosize -wrap
get-winevent
------------------
VIEW ALL USERS RECENT HISTORY
Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object {
    [System.Text.Encoding]::Default.GetString((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)
}   

--------------------------------------------------------
LINUX LOGS
/var/log/auth.log
/var/run/utmp --- current user logged in
/var/log/wtmp
/var/log/btmp --- failed log in
>> facility.severity
facility codes:  
0 kernel messages
1 user level
2 mail system
3 system daemons
4 security 
5 internally by syslogd
6 line printer
7 network news
8-23, not important to this course
severity codes
0 emerg, panic
1 alert
2 crit
3 err
4 warn
5 notice
6 info
7 debug   ##the severity level will capture the level its set to and higher, unless the severity  has an ! in front of it, then it will capture that level and lower
ls /etc/rsyslog.d


sudo cat /var/log/syslog
 >> gets system logs
 >> grep timesync /var/log/syslog (helps delminate through log)
dmesg << a command that queries /proc/kmsg
ls -l /var/log << rotates logs weekly 
cat /etc/logroate.conf << conf file for logrotate
sudo last -f /var/run/utmp << check who's logged in
sudo last -f /var/log/wtmp << ip addresses and times of logins
tail /var/log/auth.log  << log in attempts << it shows a sucessful session when your see 'New session', it ends when you see 'Removed session'
sudo cat /var/log/messages
TLDR:
location: /var/log
config file: /etc/rsyslog.conf
service: /usr/sbin/rsyslogd


log enumeration
  last -f /var/log/{wtmp,btmp,utmp} -- needed to view data files
  > /var/log/messages - wipes logs completely
 
 =============== SYSTEMD =================
 journalctl -e << queries logs on systemd 
 journalctl --list-boots << shows boot sessions ( when the computer turned on ) 
 journalctl -b [ insert boot ID from above here ] << only shows from that particular boot session
 journalctl --since "2022-01-01" --until "2022-02-02"
 journalctl -p err << shows all logs marked as an 'error', can replace err with any of the severity listing
 journalctl -n << last 10 enteries
 journalctl -f << messages as they update in real time
 cat /etc/systemd/journald.conf << conf file for journalctl
 auditctl -l << checks rules
 auditctl -s << checks current state of the control system
 aureport << summary report of audit logs
 auditctl -w /etc/hosts -p wa -k hosts_file_change << adds new rules (captial W will remove it)
 ausearch -k 'entry' << searchs the audit logs for something
 
