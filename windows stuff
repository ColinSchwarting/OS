registry:
  a database of information for everything window
  
  hklm has volatile date pertaining to hardware files

hives:
  classes root:
  current user:
    gives a link to the hkey users of the current user logged in
  local machine:
  users:
    contains all user profiles
  current configuration:
    
edit registry in command line:
  more
  reg add
  reg delete
  reg copy
  
  ------------------------
  
  DEFAULT RUN KEYS----- check here for malicious persistance
 HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\run
 HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\runonce
 HKCU\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN
 HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\runonce
 
 HKU\<SID>\SOFTWARE\Microsoft\Windows\Currentversion\run
 HKLM\SOFTWARE
 
 BASIC WINDOWS COMMANDS
 
 ALTERNATE DATA STREAMS:
 COMMAND LINES ---------------------------------
echo I love coffee > coffee.txt
dir coffee.txt >> gives info about txt file
type coffee.txt >> I love coffee
echo secret text shhh > coffee.txt:secret.info
dir coffee.txt >> changes time, but nothing else from OG files
type coffee.txt >> I love coffee
more < coffee.txt:secret.info >> secret text shh
dir /R coffee.txt >> shows the ADS
echo secret text > OrdinaryFile.txt:SecretFile

POWERSHELL----------------------------
echo "ordinary text lol" > coffee.txt
set-content coffee.txt -value "secret text actually" -stream topsecret.info
gi .\coffee.txt -stream *
gi .\coffee.txt -stream topsecret.info
get-filehash .\coffee.txt | ft -wr <<< hash of text file doesn't change

-------------------HOST ENUMERATION----------------------
where am i?
>>hostname -f
who am i?
>>id
>>whoami
>>what can i do?
>>sudo -l
what's going on?
>>netstat
>>ps -elf
>>ss
>>top
what's that?
what's it doing?
why/how is it going that?
what's in there?
cat files, view parent processes, view child processes
view parents files
 
 
 
 bcdedit /set (/deletevalue) safeboot
 bcdedit /set (/deletevalue) safebootalternateshell yes
 msconfig << use the gui and figure it out
 
 ------------------------------------------------------
 REAL SHIT
 Process Validity:
 making sure a thing is what it says it is
 look at what's actually being run
 get the version of tools being run to find exploits
 #(real quick tho: what's a process? it's an executable that requires some kind of user interaction)
  
  but also, what's a DLL? dynamic link library
  >helps a program run
  
 services launch automatically or when certain things are met, similar to a scheduled task
 without admin rights, services can't be killed
 
 processes can be killed, however, regardless of privilege level
 
 can hide stuff from APIs, but can't hide from the kernel
 >>get-ciminstance will be the best way to find something that's trying to hide
  >>get-wmiobject win32_process | where { $_.name  -like "powershell_ise.exe" } | select *
         this will get you more information than get-object, including the PID and Parent PID
         check full file path and the command line function to see what any given process is actually doing lol

heres a cool one: get-wmiobject win32_process | where { $_.name  -like "maleware.exe" } | select name, processid, parentprocessid, path, commandline
                                                        { $_.processid -eq "123" }
                    get-wmiobject win32_process | ft name, processid, parentprocessid, path, commandline
 if the binary of an exe doesn't run itself, something is sus


GET THE DLLS of stuff:
get-process powershell_ise | select -ExpandProperty modules
(if the Dll is uppercase, it generally means it's run by system)

get services and tasks and shit:
tasklist (tasks)
tasklist /svc (services)
tasklist /m (modules)
or just use task manager wtf
or regedit << Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image
 
 find services-----------------
 
 start taskmgr
 services
 sc.exe >> sc.exe query >> sc.exe queryex type=service >> sc.exe queryex type=service state=inactive(or all)
    get-ciminstance win32_service | where { $_.displayName -like "*firewall*" } | select name 
sc.exe showsid "service"
get-scheduledtask <<<<< we ONLY care about the running status
  getscheduledtask -taskname "name" | select *
schtasks /query /tn "name" /v /fo list
or use task scheduler
get-ciminstance win32_service | where { $_.Name -like "calc" } | select name processid,parentprocessid
 ps: find-service"service" "service"
get-ciminstance
 gwmi win32_service | where { $_.name -like "Schedule" } | 

network connections-----------------
strings -accepteula << '-accepteula' auto accepts all pop ups and warnings from a command

netstat -anob
autoruns64 == is a tool that discovers software that automatically boots or starts
procexp64 == can services and their children 
tcpview == views ports and local address of services
handle == view the handles of a process

User account control=================

registry key is located at HKLM:\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System
>> gi HKLM:\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System
 if enableLUA is set to 1: it's enabled; elif set to 0: return disabled;
 UAC Execution level in a file manifest----
 asInvoker: runs w the same perms as the process that started it
 requireAdministrator: will run w admin perms
 highestAvailable: highest perms it can
 
-----------------
  will the UAC prompt show? maybe idk
  
 
